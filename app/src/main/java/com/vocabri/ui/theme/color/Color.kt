/*
 * MIT License
 *
 * Copyright (c) 2025 Aleksandr Stiagov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package com.vocabri.ui.theme.color

import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF5E5791)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFE5DEFF)
val onPrimaryContainerLight = Color(0xFF1A1249)
val secondaryLight = Color(0xFF5F5C71)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFE5DFF9)
val onSecondaryContainerLight = Color(0xFF1C192B)
val tertiaryLight = Color(0xFF7B5265)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFFFD8E7)
val onTertiaryContainerLight = Color(0xFF301121)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFCF8FF)
val onBackgroundLight = Color(0xFF1C1B20)
val surfaceLight = Color(0xFFFCF8FF)
val onSurfaceLight = Color(0xFF1C1B20)
val surfaceVariantLight = Color(0xFFE5E0EC)
val onSurfaceVariantLight = Color(0xFF48464F)
val outlineLight = Color(0xFF78767F)
val outlineVariantLight = Color(0xFFC9C5D0)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF313036)
val inverseOnSurfaceLight = Color(0xFFF4EFF7)
val inversePrimaryLight = Color(0xFFC8BFFF)
val surfaceDimLight = Color(0xFFDDD8E0)
val surfaceBrightLight = Color(0xFFFCF8FF)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF7F2FA)
val surfaceContainerLight = Color(0xFFF1ECF4)
val surfaceContainerHighLight = Color(0xFFEBE6EE)
val surfaceContainerHighestLight = Color(0xFFE5E1E9)

val primaryLightMediumContrast = Color(0xFF423B73)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF756DA9)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF434055)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF767288)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF5D3749)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF94687B)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFCF8FF)
val onBackgroundLightMediumContrast = Color(0xFF1C1B20)
val surfaceLightMediumContrast = Color(0xFFFCF8FF)
val onSurfaceLightMediumContrast = Color(0xFF1C1B20)
val surfaceVariantLightMediumContrast = Color(0xFFE5E0EC)
val onSurfaceVariantLightMediumContrast = Color(0xFF44424B)
val outlineLightMediumContrast = Color(0xFF605E67)
val outlineVariantLightMediumContrast = Color(0xFF7C7983)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF313036)
val inverseOnSurfaceLightMediumContrast = Color(0xFFF4EFF7)
val inversePrimaryLightMediumContrast = Color(0xFFC8BFFF)
val surfaceDimLightMediumContrast = Color(0xFFDDD8E0)
val surfaceBrightLightMediumContrast = Color(0xFFFCF8FF)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF7F2FA)
val surfaceContainerLightMediumContrast = Color(0xFFF1ECF4)
val surfaceContainerHighLightMediumContrast = Color(0xFFEBE6EE)
val surfaceContainerHighestLightMediumContrast = Color(0xFFE5E1E9)

val primaryLightHighContrast = Color(0xFF211950)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF423B73)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF222032)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF434055)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF381728)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF5D3749)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFCF8FF)
val onBackgroundLightHighContrast = Color(0xFF1C1B20)
val surfaceLightHighContrast = Color(0xFFFCF8FF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFE5E0EC)
val onSurfaceVariantLightHighContrast = Color(0xFF24232B)
val outlineLightHighContrast = Color(0xFF44424B)
val outlineVariantLightHighContrast = Color(0xFF44424B)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF313036)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFEFE9FF)
val surfaceDimLightHighContrast = Color(0xFFDDD8E0)
val surfaceBrightLightHighContrast = Color(0xFFFCF8FF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF7F2FA)
val surfaceContainerLightHighContrast = Color(0xFFF1ECF4)
val surfaceContainerHighLightHighContrast = Color(0xFFEBE6EE)
val surfaceContainerHighestLightHighContrast = Color(0xFFE5E1E9)

val primaryDark = Color(0xFFC8BFFF)
val onPrimaryDark = Color(0xFF30285F)
val primaryContainerDark = Color(0xFF463F77)
val onPrimaryContainerDark = Color(0xFFE5DEFF)
val secondaryDark = Color(0xFFC9C3DC)
val onSecondaryDark = Color(0xFF312E41)
val secondaryContainerDark = Color(0xFF474459)
val onSecondaryContainerDark = Color(0xFFE5DFF9)
val tertiaryDark = Color(0xFFECB8CE)
val onTertiaryDark = Color(0xFF482536)
val tertiaryContainerDark = Color(0xFF613B4D)
val onTertiaryContainerDark = Color(0xFFFFD8E7)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF141318)
val onBackgroundDark = Color(0xFFE5E1E9)
val surfaceDark = Color(0xFF141318)
val onSurfaceDark = Color(0xFFE5E1E9)
val surfaceVariantDark = Color(0xFF48464F)
val onSurfaceVariantDark = Color(0xFFC9C5D0)
val outlineDark = Color(0xFF928F99)
val outlineVariantDark = Color(0xFF48464F)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE5E1E9)
val inverseOnSurfaceDark = Color(0xFF313036)
val inversePrimaryDark = Color(0xFF5E5791)
val surfaceDimDark = Color(0xFF141318)
val surfaceBrightDark = Color(0xFF3A383E)
val surfaceContainerLowestDark = Color(0xFF0E0E13)
val surfaceContainerLowDark = Color(0xFF1C1B20)
val surfaceContainerDark = Color(0xFF201F25)
val surfaceContainerHighDark = Color(0xFF2A292F)
val surfaceContainerHighestDark = Color(0xFF35343A)

val primaryDarkMediumContrast = Color(0xFFCCC4FF)
val onPrimaryDarkMediumContrast = Color(0xFF150B44)
val primaryContainerDarkMediumContrast = Color(0xFF9189C7)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFCDC7E1)
val onSecondaryDarkMediumContrast = Color(0xFF161426)
val secondaryContainerDarkMediumContrast = Color(0xFF928EA5)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFF1BCD2)
val onTertiaryDarkMediumContrast = Color(0xFF2A0B1C)
val tertiaryContainerDarkMediumContrast = Color(0xFFB28398)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF141318)
val onBackgroundDarkMediumContrast = Color(0xFFE5E1E9)
val surfaceDarkMediumContrast = Color(0xFF141318)
val onSurfaceDarkMediumContrast = Color(0xFFFEF9FF)
val surfaceVariantDarkMediumContrast = Color(0xFF48464F)
val onSurfaceVariantDarkMediumContrast = Color(0xFFCDC9D4)
val outlineDarkMediumContrast = Color(0xFFA5A1AC)
val outlineVariantDarkMediumContrast = Color(0xFF85828C)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFE5E1E9)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF2B292F)
val inversePrimaryDarkMediumContrast = Color(0xFF484078)
val surfaceDimDarkMediumContrast = Color(0xFF141318)
val surfaceBrightDarkMediumContrast = Color(0xFF3A383E)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0E0E13)
val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1B20)
val surfaceContainerDarkMediumContrast = Color(0xFF201F25)
val surfaceContainerHighDarkMediumContrast = Color(0xFF2A292F)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF35343A)

val primaryDarkHighContrast = Color(0xFFFEF9FF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFCCC4FF)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFEF9FF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFCDC7E1)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFF9F9)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFF1BCD2)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF141318)
val onBackgroundDarkHighContrast = Color(0xFFE5E1E9)
val surfaceDarkHighContrast = Color(0xFF141318)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF48464F)
val onSurfaceVariantDarkHighContrast = Color(0xFFFEF9FF)
val outlineDarkHighContrast = Color(0xFFCDC9D4)
val outlineVariantDarkHighContrast = Color(0xFFCDC9D4)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE5E1E9)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF292258)
val surfaceDimDarkHighContrast = Color(0xFF141318)
val surfaceBrightDarkHighContrast = Color(0xFF3A383E)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0E0E13)
val surfaceContainerLowDarkHighContrast = Color(0xFF1C1B20)
val surfaceContainerDarkHighContrast = Color(0xFF201F25)
val surfaceContainerHighDarkHighContrast = Color(0xFF2A292F)
val surfaceContainerHighestDarkHighContrast = Color(0xFF35343A)
